import org.testng.annotations.*;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import static org.testng.Assert.*;
public class PenTest {
    Pen pen;
    int inkContainerValue;
    double sizeLetter;
    String color;
    String word;

    @DataProvider(name = "ValidPens")
    public Object[][] getValidPen() {
        return new Object[][]{
                {new Pen(0, 1.0, "Blue"), ""},
                {new Pen(5, 1.0, "Red"), "test"},
                {new Pen(1, 1.0, "Green"), "t"},
        };
    }

    //@Parameters({"inkContainerValue", "sizeLetter", "color"})
    @BeforeTest
    public void setUp() {
        this.inkContainerValue = 10;
        sizeLetter = 1.0;
        color = "PINK";
        word = "test";
        pen = new Pen(inkContainerValue, sizeLetter, color);
    }


    @Test
    public void getColorTest() {
        assertEquals(pen.getColor(), color);
    }

    @Test
    public void isWorkTest() {
        assertEquals(pen.isWork(), Boolean.TRUE);
    }

    @Test(dataProvider = "ValidPens", enabled = true)
    public void writeValidPenTest(Pen pen, String expectedWord) {
        assertEquals(pen.write(word), expectedWord);
    }

    @Test
    public void write_NoLetter_Test() {
        Pen pen = new Pen(10, 0.0);
        String expectedWord = "";
        assertEquals(pen.write(word), expectedWord);

    }
    @Test
    public void write_negativeLetter_Test() {
        Pen pen = new Pen(10, -1.0);
        String expectedWord = "";
        assertEquals(pen.write(word), expectedWord);

    }

    @Test
    public void write_negative_inkContainer_Test() {
        Pen pen = new Pen(-10);
        String expectedWord = "";
        assertEquals(pen.write(word), expectedWord);

    }
    @Test
    public void write_negative_doubleLetter_Test() {
        Pen pen = new Pen(4,2.0);
        String expectedWord = "te";
        assertEquals(pen.write(word), expectedWord);

    }

    @Test
    public void doSomethingElseTest() {
        ByteArrayOutputStream output = new ByteArrayOutputStream();
        PrintStream console = System.out;
        System.setOut(new PrintStream(output));
        pen.doSomethingElse();
        String rez = output.toString();
        output.reset();
        System.out.println(color);
        assertEquals(output.toString(), rez);
        System.setOut(console);
    }
}

